# syntax = docker/dockerfile:1

# FROM node:23 AS base

# ARG PORT=3000

# ENV NEXT_TELEMETRY_DISABLED=1

# RUN apt-get update && apt-get install -y locales

# # Locale
# RUN sed -i -e \
#   's/# ru_RU.UTF-8 UTF-8/ru_RU.UTF-8 UTF-8/' /etc/locale.gen \
#    && locale-gen

# ENV LANG ru_RU.UTF-8
# ENV LANGUAGE ru_RU:ru
# ENV LC_LANG ru_RU.UTF-8
# ENV LC_ALL ru_RU.UTF-8

# # +Timezone (если надо на этапе сборки)
# ENV TZ Europe/Moscow

# WORKDIR /usr/src/app



# # Dependencies
# FROM base AS dependencies


# # установка зависимостей
# # скопировать оба файла: package.json и yarn.lock
# COPY package.json ./
# COPY yarn.lock ./
# RUN yarn install
# # RUN npm ci

# # Build
# FROM base AS build

# COPY --from=dependencies /usr/src/app/node_modules ./node_modules
# COPY . .

# # Public build-time environment variables
# ARG NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY
# ENV NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=$NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY

# ARG DB_HOST
# ENV DB_HOST=$DB_HOST
# ARG DB_PORT
# ENV DB_PORT=$DB_PORT
# ARG DB_NAME
# ENV DB_NAME=$DB_NAME
# ARG DB_USER
# ENV DB_USER=$DB_USER
# ARG DB_PASSWORD
# ENV DB_PASSWORD=$DB_PASSWORD
# ARG REPORT_DB_HOST
# ENV REPORT_DB_HOST=$REPORT_DB_HOST
# ARG REPORT_DB_PORT
# ENV REPORT_DB_PORT=$REPORT_DB_PORT
# ARG REPORT_DB_NAME
# ENV REPORT_DB_NAME=$REPORT_DB_NAME
# ARG REPORT_DB_USER
# ENV REPORT_DB_USER=$REPORT_DB_USER
# ARG REPORT_DB_PASSWORD
# ENV REPORT_DB_PASSWORD=$REPORT_DB_PASSWORD
# ARG MINIO_ENDPOINT
# ENV MINIO_ENDPOINT=$MINIO_ENDPOINT
# ARG MINIO_PORT
# ENV MINIO_PORT=$MINIO_PORT
# ARG MINIO_ROOT_USER
# ENV MINIO_ROOT_USER=$MINIO_ROOT_USER
# ARG MINIO_ROOT_PASSWORD
# ENV MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
# ARG MINIO_BUCKET_NAME
# ENV MINIO_BUCKET_NAME=$MINIO_BUCKET_NAME
# ARG KAFKA_BROKER
# ENV KAFKA_BROKER=$KAFKA_BROKER
# ARG KAFKA_TOPIC
# ENV KAFKA_TOPIC=$KAFKA_TOPIC
# ARG NEXT_PUBLIC_MAP_STAT_ZOOM_LEVEL
# ENV NEXT_PUBLIC_MAP_STAT_ZOOM_LEVEL=$NEXT_PUBLIC_MAP_STAT_ZOOM_LEVEL

# # RUN npm run build
# RUN yarn build

# # Run
# FROM base AS run

# ENV NODE_ENV=production
# ENV PORT=$PORT

# RUN addgroup --system --gid 1001 nodejs
# RUN adduser --system --uid 1001 nextjs
# RUN mkdir .next
# RUN chown nextjs:nodejs .next

# COPY --from=build /app/public ./public
# COPY --from=build --chown=nextjs:nodejs /app/.next/standalone ./
# COPY --from=build --chown=nextjs:nodejs /app/.next/static ./.next/static

# USER nextjs

# EXPOSE $PORT

# # Environment variables must be redefined at run time
# ARG DB_HOST
# ENV DB_HOST=$DB_HOST
# ARG DB_PORT
# ENV DB_PORT=$DB_PORT
# ARG DB_NAME
# ENV DB_NAME=$DB_NAME
# ARG DB_USER
# ENV DB_USER=$DB_USER
# ARG DB_PASSWORD
# ENV DB_PASSWORD=$DB_PASSWORD
# ARG REPORT_DB_HOST
# ENV REPORT_DB_HOST=$REPORT_DB_HOST
# ARG REPORT_DB_PORT
# ENV REPORT_DB_PORT=$REPORT_DB_PORT
# ARG REPORT_DB_NAME
# ENV REPORT_DB_NAME=$REPORT_DB_NAME
# ARG REPORT_DB_USER
# ENV REPORT_DB_USER=$REPORT_DB_USER
# ARG REPORT_DB_PASSWORD
# ENV REPORT_DB_PASSWORD=$REPORT_DB_PASSWORD
# ARG MINIO_ENDPOINT
# ENV MINIO_ENDPOINT=$MINIO_ENDPOINT
# ARG MINIO_PORT
# ENV MINIO_PORT=$MINIO_PORT
# ARG MINIO_ROOT_USER
# ENV MINIO_ROOT_USER=$MINIO_ROOT_USER
# ARG MINIO_ROOT_PASSWORD
# ENV MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
# ARG MINIO_BUCKET_NAME
# ENV MINIO_BUCKET_NAME=$MINIO_BUCKET_NAME
# ARG KAFKA_BROKER
# ENV KAFKA_BROKER=$KAFKA_BROKER
# ARG KAFKA_TOPIC
# ENV KAFKA_TOPIC=$KAFKA_TOPIC
# ARG NEXT_PUBLIC_MAP_STAT_ZOOM_LEVEL
# ENV NEXT_PUBLIC_MAP_STAT_ZOOM_LEVEL=$NEXT_PUBLIC_MAP_STAT_ZOOM_LEVEL

# ENV HOSTNAME="0.0.0.0"
# CMD ["node", "server.js"]



FROM node:23 AS base

ENV NEXT_TELEMETRY_DISABLED=1

RUN apt-get update && apt-get install -y locales

# Locale
RUN sed -i -e \
  's/# ru_RU.UTF-8 UTF-8/ru_RU.UTF-8 UTF-8/' /etc/locale.gen \
   && locale-gen

ENV LANG ru_RU.UTF-8
ENV LANGUAGE ru_RU:ru
ENV LC_LANG ru_RU.UTF-8
ENV LC_ALL ru_RU.UTF-8

# +Timezone (если надо на этапе сборки)
ENV TZ Europe/Moscow


WORKDIR /usr/src/app

COPY package.json yarn.lock ./

RUN yarn install

COPY . ./

ARG PORT=3330
EXPOSE $PORT

ENV PORT=$PORT


RUN touch .env.development

# Environment variables must be redefined at run time
ARG DB_HOST
ENV DB_HOST=$DB_HOST
RUN echo "DB_HOST=${DB_HOST}" >> .env.development

ARG DB_PORT
ENV DB_PORT=$DB_PORT
RUN echo "DB_PORT=${DB_PORT}" >> .env.development

ARG DB_NAME
ENV DB_NAME=$DB_NAME
RUN echo "DB_NAME=${DB_NAME}" >> .env.development

ARG DB_USER
ENV DB_USER=$DB_USER
RUN echo "DB_USER=${DB_USER}" >> .env.development

ARG DB_PASSWORD
ENV DB_PASSWORD=$DB_PASSWORD
RUN echo "DB_PASSWORD=${DB_PASSWORD}" >> .env.development

ARG REPORT_DB_HOST
ENV REPORT_DB_HOST=$REPORT_DB_HOST
RUN echo "REPORT_DB_HOST=${REPORT_DB_HOST}" >> .env.development

ARG REPORT_DB_PORT
ENV REPORT_DB_PORT=$REPORT_DB_PORT
RUN echo "REPORT_DB_PORT=${REPORT_DB_PORT}" >> .env.development

ARG REPORT_DB_NAME
ENV REPORT_DB_NAME=$REPORT_DB_NAME
RUN echo "REPORT_DB_NAME=${REPORT_DB_NAME}" >> .env.development

ARG REPORT_DB_USER
ENV REPORT_DB_USER=$REPORT_DB_USER
RUN echo "REPORT_DB_USER=${REPORT_DB_USER}" >> .env.development

ARG REPORT_DB_PASSWORD
ENV REPORT_DB_PASSWORD=$REPORT_DB_PASSWORD
RUN echo "REPORT_DB_PASSWORD=${REPORT_DB_PASSWORD}" >> .env.development

ARG MINIO_ENDPOINT
ENV MINIO_ENDPOINT=$MINIO_ENDPOINT
RUN echo "MINIO_ENDPOINT=${MINIO_ENDPOINT}" >> .env.development

ARG MINIO_PORT
ENV MINIO_PORT=$MINIO_PORT
RUN echo "MINIO_PORT=${MINIO_PORT}" >> .env.development

ARG MINIO_ROOT_USER
ENV MINIO_ROOT_USER=$MINIO_ROOT_USER
RUN echo "MINIO_ROOT_USER=${MINIO_ROOT_USER}" >> .env.development

ARG MINIO_ROOT_PASSWORD
ENV MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
RUN echo "MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}" >> .env.development

ARG MINIO_BUCKET_NAME
ENV MINIO_BUCKET_NAME=$MINIO_BUCKET_NAME
RUN echo "MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}" >> .env.development

ARG KAFKA_BROKER
ENV KAFKA_BROKER=$KAFKA_BROKER
RUN echo "KAFKA_BROKER=${KAFKA_BROKER}" >> .env.development

ARG KAFKA_TOPIC
ENV KAFKA_TOPIC=$KAFKA_TOPIC
RUN echo "KAFKA_TOPIC=${KAFKA_TOPIC}" >> .env.development

ARG NEXT_PUBLIC_MAP_STAT_ZOOM_LEVEL
ENV NEXT_PUBLIC_MAP_STAT_ZOOM_LEVEL=$NEXT_PUBLIC_MAP_STAT_ZOOM_LEVEL
RUN echo "NEXT_PUBLIC_MAP_STAT_ZOOM_LEVEL=${NEXT_PUBLIC_MAP_STAT_ZOOM_LEVEL}" >> .env.development


ENV HOSTNAME="0.0.0.0"
CMD ["yarn", "staging"]